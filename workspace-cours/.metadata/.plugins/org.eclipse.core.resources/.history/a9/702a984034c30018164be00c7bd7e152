package cours_1;

import java.util.Arrays;
import java.util.List;

public class RotPos {

	static String MESSAGE = "La plupart des hommes ne savent ce que c'est que de rentrer dans eux-mêmes pour y entendre la voix de la vérité, selon laquelle ils doivent juger de toutes choses. Ce sont leurs yeux qui règlent leurs décisions.";
	static List<String> ALPHABET = Arrays.asList("a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n",
			"o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z");

	public static void main(String[] args) {
		System.out.println("Rot<pos> de : " + MESSAGE);
		String encodeString = encodeString(MESSAGE);
		System.out.println("Encode : " + encodeString);
		System.out.println("Decode : " + decodeString(encodeString));
	}

	private static String encodeString(String message) {
		return code(message, true);
	}

	private static String decodeString(String message) {
		return code(message, false);
	}

	private static String code(String message, Boolean encode) {
		StringBuilder result = new StringBuilder();
		if (message != null) {
			message = message.toLowerCase();
			List<String> splitedChar = Arrays.asList(message.split("(?!^)"));
			Integer iterator = 0;
			Integer position = null;
			for (String letter : splitedChar) {
				if (!ALPHABET.contains(letter)) {
					result.append(letter);
				} else if (encode) {
					position = (ALPHABET.indexOf(letter) + iterator) % ALPHABET.size() + 1;
					if (position >= 26) {
						position = 0;
					}
					result.append(ALPHABET.get(position));
				} else if (!encode) {
					position = (ALPHABET.indexOf(letter) - iterator) % ALPHABET.size() - 1;
					if (position < 0) {
						position = position + 26;
					}
					result.append(ALPHABET.get(position));
				}
				iterator++;
			}
		} else {
			return "Message null";
		}
		return result.toString();
	}

}